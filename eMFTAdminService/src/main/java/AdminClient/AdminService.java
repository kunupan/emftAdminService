/**
 * AdminService.java
 *
 * This file was auto-generated from WSDL
 * by the Apache Axis 1.4 Jul 11, 2014 (12:11:36 EDT) WSDL2Java emitter.
 */

package AdminClient;

public interface AdminService extends java.rmi.Remote {
    public AdminClient.JMSSrvCfg getJMSConfig(java.lang.String in0) throws java.rmi.RemoteException;
    public AdminClient.ConfigU2U getConfigU2U(java.lang.String in0) throws java.rmi.RemoteException;
    public java.lang.String collectorStart(java.lang.String in0) throws java.rmi.RemoteException;
    public java.lang.String collectorStop(java.lang.String in0) throws java.rmi.RemoteException;
    public java.lang.String getCollectorStatus(java.lang.String in0) throws java.rmi.RemoteException;
    public boolean updateServer(AdminClient.Server in0, java.lang.String in1, java.lang.String in2) throws java.rmi.RemoteException;
    public java.lang.String[] retrieveAllNodeNames(java.lang.String in0) throws java.rmi.RemoteException;
    public int deleteExpiredSessionIds(java.lang.String in0) throws java.rmi.RemoteException;
    public AdminClient.Session[] getExpiredSessionIds(java.lang.String in0) throws java.rmi.RemoteException;
    public AdminClient.Node[] retrieveAllMonitorNodes(java.lang.String in0) throws java.rmi.RemoteException;
    public AdminClient.Key[] searchAllKeys(AdminClient.Key in0, java.lang.String in1, java.lang.String in2) throws java.rmi.RemoteException;
    public AdminClient.Session[] listActiveSessionIds(java.lang.String in0) throws java.rmi.RemoteException;
    public AdminClient.FTTransfer[] retrieveAllTransfersFromBank(java.lang.String in0) throws java.rmi.RemoteException;
    public java.lang.String getCollectorRemoteStatus(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException;
    public AdminClient.User[] retrieveAllUsersInDept(java.lang.String in0, java.lang.String in1, java.lang.String in2) throws java.rmi.RemoteException;
    public AdminClient.User[] retrieveAllUsersInDept(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException;
    public boolean removeServer(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException;
    public java.lang.String[] retrieveAllUserIds(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException;
    public java.lang.String[] retrieveAllUserIds(java.lang.String in0) throws java.rmi.RemoteException;
    public java.lang.String getUsersDepartment(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException;
    public boolean updateSchedulerSrvCfg(AdminClient.SchedulerSrvCfg in0, java.lang.String in1, java.lang.String in2) throws java.rmi.RemoteException;
    public AdminClient.SchedulerSrvCfg getSchedulerSrvCfg(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException;
    public AdminClient.SchedulerSrvCfg getSchedulerSrvCfg(java.lang.String in0) throws java.rmi.RemoteException;
    public java.lang.String[] retrieveAllVirtualAliases(java.lang.String in0) throws java.rmi.RemoteException;
    public boolean removeExpiredFiles(java.lang.String in0) throws java.rmi.RemoteException;
    public AdminClient.FileInfo[] retrieveAllExpiredFiles(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException;
    public AdminClient.FileInfo[] retrieveAllFilesForUser(java.lang.String in0, java.lang.String in1, java.lang.String in2) throws java.rmi.RemoteException;
    public AdminClient.Role[] retrieveAllRolesForUser(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException;
    public boolean removeAlert(AdminClient.Alert in0, java.lang.String in1) throws java.rmi.RemoteException;
    public AdminClient.User[] retrieveAllUsersInRole(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException;
    public AdminClient.User[] retrieveAllUsersNotInRole(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException;
    public boolean removeUserFromRole(java.lang.String in0, java.lang.String in1, java.lang.String in2) throws java.rmi.RemoteException;
    public AdminClient.Role[] retrieveAllGroups(java.lang.String in0) throws java.rmi.RemoteException;
    public AdminClient.Role[] retrieveAllGroupsInDept(java.lang.String in0) throws java.rmi.RemoteException;
    public AdminClient.Role[] retrieveAllGroupsForUser(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException;
    public AdminClient.User[] retrieveAllUsersInGroup(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException;
    public AdminClient.User[] retrieveAllUsersNotInGroup(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException;
    public java.lang.String[] retrieveAllGroupIds(java.lang.String in0) throws java.rmi.RemoteException;
    public boolean removeUserFromGroup(java.lang.String in0, java.lang.String in1, java.lang.String in2) throws java.rmi.RemoteException;
    public AdminClient.Config[] retrieveAllConfigs(java.lang.String in0) throws java.rmi.RemoteException;
    public AdminClient.AuditBase[] retrieveAllAudits(java.lang.String in0, java.lang.String in1, java.lang.String in2) throws java.rmi.RemoteException;
    public AdminClient.AuditBase[] retrieveAllAuditsForUser(java.lang.String in0, java.lang.String in1, java.lang.String in2, java.lang.String in3) throws java.rmi.RemoteException;
    public boolean removeAuditsOlderThanDays(int in0, int in1, java.lang.String in2) throws java.rmi.RemoteException;
    public boolean removeAuditsOlderThanDate(AdminClient.DateTime in0, int in1, java.lang.String in2) throws java.rmi.RemoteException;
    public boolean updateUserProfile(AdminClient.UserProfile in0, java.lang.String in1) throws java.rmi.RemoteException;
    public boolean removeUserProfile(java.lang.String in0, java.lang.String in1, java.lang.String in2, java.lang.String in3) throws java.rmi.RemoteException;
    public AdminClient.UserProfile[] retrieveAllUserProfiles(java.lang.String in0) throws java.rmi.RemoteException;
    public AdminClient.UserProfile[] searchUserProfile(AdminClient.UserProfile in0, java.lang.String in1) throws java.rmi.RemoteException;
    public boolean setDefaultSystemKey(int in0, java.lang.String in1, java.lang.String in2) throws java.rmi.RemoteException;
    public byte[] getCertFromSSHKey(AdminClient.Key in0, java.lang.String in1) throws java.rmi.RemoteException;
    public AdminClient.Checkpoint[] retrieveAllCheckpoints(java.lang.String in0) throws java.rmi.RemoteException;
    public boolean removeAS2SrvConfig(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException;
    public AdminClient.AS2SrvCfg[] retrieveAllAS2SrvConfigs(java.lang.String in0) throws java.rmi.RemoteException;
    public boolean updateFtpSrvConfig(AdminClient.FTPServerConfig in0, java.lang.String in1, java.lang.String in2) throws java.rmi.RemoteException;
    public boolean updateAS2SrvConfig(AdminClient.AS2SrvCfg in0, java.lang.String in1, java.lang.String in2) throws java.rmi.RemoteException;
    public boolean removeCFSrvConfig(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException;
    public AdminClient.CFServerConfig[] retrieveAllCFSrvConfigs(java.lang.String in0) throws java.rmi.RemoteException;
    public boolean updateCFSrvConfig(AdminClient.CFServerConfig in0, java.lang.String in1, java.lang.String in2) throws java.rmi.RemoteException;
    public AdminClient.Checkpoint[] searchCheckpoints(AdminClient.Checkpoint in0, java.lang.String in1) throws java.rmi.RemoteException;
    public boolean updateServerStatusConfig(AdminClient.ServerStatusConfig in0, java.lang.String in1, java.lang.String in2) throws java.rmi.RemoteException;
    public AdminClient.ServerStatusConfig getServerStatusConfig(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException;
    public AdminClient.ServerStatusConfig getServerStatusConfig(java.lang.String in0) throws java.rmi.RemoteException;
    public boolean removeServerStatusConfig(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException;
    public AdminClient.User[] searchUsersInDepartment(java.lang.String in0, java.lang.String in1, java.lang.String in2, java.lang.String in3, java.lang.String in4, java.lang.String in5) throws java.rmi.RemoteException;
    public java.lang.String[] retrieveAllPGPServerNamesInDept(java.lang.String in0) throws java.rmi.RemoteException;
    public java.lang.String[] retrieveAllInternetServerNames(java.lang.String in0) throws java.rmi.RemoteException;
    public java.lang.String[] retrieveAllVirtualAliasesForUser(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException;
    public AdminClient.SearchAudit[] retrieveAllSearchAuditsFromBank(java.lang.String in0) throws java.rmi.RemoteException;
    public boolean removeAlertAuditsOlderThanDate(AdminClient.DateTime in0, int in1, java.lang.String in2) throws java.rmi.RemoteException;
    public boolean removeAlertAuditsOlderThanDays(int in0, int in1, java.lang.String in2) throws java.rmi.RemoteException;
    public AdminClient.ServerStatusConfig[] retrieveAllServerStatusConfigs(java.lang.String in0) throws java.rmi.RemoteException;
    public AdminClient.SchedulerSrvCfg[] retrieveAllSchedulerSrvConfigs(java.lang.String in0) throws java.rmi.RemoteException;
    public AdminClient.U2URequest[] searchU2URequests(AdminClient.U2USearchCriteria in0, java.lang.String in1, java.lang.String in2) throws java.rmi.RemoteException;
    public boolean addOnDemandSecurity(AdminClient.OnDemandSecurity in0, java.lang.String in1) throws java.rmi.RemoteException;
    public boolean updateOnDemandSecurity(AdminClient.OnDemandSecurity in0, java.lang.String in1, java.lang.String in2, java.lang.String in3) throws java.rmi.RemoteException;
    public boolean removeOnDemandSecurity(java.lang.String in0, java.lang.String in1, java.lang.String in2) throws java.rmi.RemoteException;
    public boolean removeOnDemandUsers(AdminClient.OnDemandUsers in0, java.lang.String in1) throws java.rmi.RemoteException;
    public AdminClient.OnDemandSecurity getOnDemandSecurity(java.lang.String in0, java.lang.String in1, java.lang.String in2) throws java.rmi.RemoteException;
    public AdminClient.User[] retrieveAllOnDemandUsers(java.lang.String in0) throws java.rmi.RemoteException;
    public AdminClient.OnDemandSecurity[] retrieveAllOnDemandSecurity(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException;
    public AdminClient.OnDemandSecurity[] searchOnDemandSecurity(AdminClient.OnDemandSecurity in0, java.lang.String in1, java.lang.String in2) throws java.rmi.RemoteException;
    public boolean updateCollectorSrvCfg(AdminClient.CollectorSrvCfg in0, java.lang.String in1, java.lang.String in2) throws java.rmi.RemoteException;
    public AdminClient.CollectorSrvCfg getCollectorSrvCfg(java.lang.String in0) throws java.rmi.RemoteException;
    public AdminClient.Key[] retrieveAllPrivateKeyTypes(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException;
    public AdminClient.Key[] searchPrivateKeys(int in0, AdminClient.Key in1, java.lang.String in2, java.lang.String in3) throws java.rmi.RemoteException;
    public AdminClient.Key[] retrieveAllUserServerKeyTypes(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException;
    public AdminClient.LicenseKey[] retrieveAllLicenseKeys(java.lang.String in0) throws java.rmi.RemoteException;
    public AdminClient.Server[] retrieveAllServers(java.lang.String in0) throws java.rmi.RemoteException;
    public java.lang.String[] retrieveAllServerNames(java.lang.String in0) throws java.rmi.RemoteException;
    public java.lang.String[] retrieveAllServerNamesInDept(java.lang.String in0) throws java.rmi.RemoteException;
    public java.lang.String[] retrieveAllCfServerNames(java.lang.String in0) throws java.rmi.RemoteException;
    public boolean removeExpiredTransfers(java.lang.String in0) throws java.rmi.RemoteException;
    public AdminClient.Transfer[] retrieveAllTransfers(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException;
    public AdminClient.Transfer[] retrieveAllExpiredTransfers(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException;
    public AdminClient.Transfer[] retrieveAllTransfersForUser(java.lang.String in0, java.lang.String in1, java.lang.String in2) throws java.rmi.RemoteException;
    public AdminClient.Server[] retrieveAllMonitorServers(java.lang.String in0) throws java.rmi.RemoteException;
    public boolean addServerCredential(AdminClient.ServerCredentials in0, java.lang.String in1) throws java.rmi.RemoteException;
    public boolean updateServerCredential(AdminClient.ServerCredentials in0, java.lang.String in1) throws java.rmi.RemoteException;
    public boolean removeServerCredential(java.lang.String in0, java.lang.String in1, java.lang.String in2, java.lang.String in3) throws java.rmi.RemoteException;
    public java.lang.String getFTPServerStatus(java.lang.String in0) throws java.rmi.RemoteException;
    public AdminClient.FTPServerConfig[] retrieveAllFTPSrvConfigs(java.lang.String in0) throws java.rmi.RemoteException;
    public boolean removeFTPSrvConfig(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException;
    public AdminClient.Department[] retrieveAllDepartments(java.lang.String in0) throws java.rmi.RemoteException;
    public java.lang.String addTransferToBank(AdminClient.FTTransfer in0, java.lang.String in1) throws java.rmi.RemoteException;
    public boolean updateTransferInBank(AdminClient.FTTransfer in0, java.lang.String in1) throws java.rmi.RemoteException;
    public boolean deleteTransferFromBank(AdminClient.FTTransfer in0, java.lang.String in1) throws java.rmi.RemoteException;
    public AdminClient.FTTransfer getTransferFromBank(AdminClient.FTTransfer in0, java.lang.String in1) throws java.rmi.RemoteException;
    public AdminClient.FTTransfer[] searchFTTransfers(AdminClient.FTTransfer in0, java.lang.String in1) throws java.rmi.RemoteException;
    public java.lang.String submitTransferToServer(AdminClient.FTTransfer in0, java.lang.String in1) throws java.rmi.RemoteException;
    public boolean deleteNodeFromBank(AdminClient.NodeFT in0, java.lang.String in1) throws java.rmi.RemoteException;
    public AdminClient.NodeFT getNodeFromServer(java.lang.String in0, AdminClient.Server in1, java.lang.String in2) throws java.rmi.RemoteException;
    public AdminClient.NodeFT[] retrieveAllNodesFromServer(AdminClient.Server in0, java.lang.String in1) throws java.rmi.RemoteException;
    public boolean deleteNodeFromServer(AdminClient.NodeFT in0, AdminClient.Server in1, java.lang.String in2) throws java.rmi.RemoteException;
    public AdminClient.DailyStatistics getDailyStatistics(java.lang.String in0) throws java.rmi.RemoteException;
    public AdminClient.NodeFT[] retrieveAllNodeFTsFromBank(java.lang.String in0) throws java.rmi.RemoteException;
    public java.lang.String collectorRemoteStart(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException;
    public java.lang.String collectorRemoteStop(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException;
    public AdminClient.Alert[] retrieveAllAlerts(java.lang.String in0) throws java.rmi.RemoteException;
    public AdminClient.Alert[] retrieveAllAlerts(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException;
    public AdminClient.Profile getProfileFromBank(AdminClient.Profile in0, java.lang.String in1) throws java.rmi.RemoteException;
    public AdminClient.Profile[] retrieveAllProfilesFromBank(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException;
    public AdminClient.Profile[] retrieveAllProfilesFromServer(java.lang.String in0, AdminClient.Server in1, java.lang.String in2) throws java.rmi.RemoteException;
    public boolean addProfileToServer(AdminClient.Profile in0, AdminClient.Server in1, java.lang.String in2) throws java.rmi.RemoteException;
    public boolean deleteProfileFromServer(AdminClient.Profile in0, AdminClient.Server in1, java.lang.String in2) throws java.rmi.RemoteException;
    public java.lang.String addSearchAuditToBank(AdminClient.SearchAudit in0, java.lang.String in1) throws java.rmi.RemoteException;
    public boolean updateSearchAuditInBank(AdminClient.SearchAudit in0, java.lang.String in1) throws java.rmi.RemoteException;
    public boolean deleteSearchAuditFromBank(AdminClient.SearchAudit in0, java.lang.String in1) throws java.rmi.RemoteException;
    public AdminClient.SearchAudit getSearchAuditFromBank(AdminClient.SearchAudit in0, java.lang.String in1) throws java.rmi.RemoteException;
    public AdminClient.AuditBase[] searchAuditInServer(AdminClient.SearchAudit in0, AdminClient.Server in1, AdminClient.AuditBase in2, java.lang.String in3) throws java.rmi.RemoteException;
    public boolean updateSshSrvConfig(AdminClient.SshServerConfig in0, java.lang.String in1, java.lang.String in2) throws java.rmi.RemoteException;
    public AdminClient.SshServerConfig[] retrieveAllSshSrvConfigs(java.lang.String in0) throws java.rmi.RemoteException;
    public AdminClient.AuditAlert[] retrieveAllAlertAudits(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException;
    public AdminClient.AuditAlert[] searchAlertAudits(AdminClient.AuditAlert in0, java.lang.String in1, java.lang.String in2) throws java.rmi.RemoteException;
    public AdminClient.Key[] retrieveAllUserServerKeys(int in0, java.lang.String in1, java.lang.String in2) throws java.rmi.RemoteException;
    public AdminClient.Key[] retrieveAllPrivateKeys(int in0, java.lang.String in1) throws java.rmi.RemoteException;
    public AdminClient.Key[] retrieveAllPrivateKeyIds(int in0, java.lang.String in1) throws java.rmi.RemoteException;
    public byte[] getSystemPublicKey(int in0, java.lang.String in1) throws java.rmi.RemoteException;
    public AdminClient.Key validateUpdateKey(int in0, AdminClient.Key in1, java.lang.String in2) throws java.rmi.RemoteException;
    public AdminClient.Key getPublicSystemKeyById(int in0, java.lang.String in1, java.lang.String in2) throws java.rmi.RemoteException;
    public AdminClient.Key getSSHSystemKeyById(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException;
    public java.lang.String[] retrieveAllServerNamesInDeptByType(int in0, java.lang.String in1) throws java.rmi.RemoteException;
    public java.lang.String addFile(AdminClient.FileInfo in0, java.lang.String in1) throws java.rmi.RemoteException;
    public boolean addServer(AdminClient.Server in0, java.lang.String in1) throws java.rmi.RemoteException;
    public AdminClient.Server[] searchServers(AdminClient.Server in0, java.lang.String in1) throws java.rmi.RemoteException;
    public java.lang.String addTransfer(AdminClient.Transfer in0, java.lang.String in1) throws java.rmi.RemoteException;
    public boolean updateNode(AdminClient.Node in0, java.lang.String in1, java.lang.String in2) throws java.rmi.RemoteException;
    public AdminClient.Node[] searchNodes(AdminClient.Node in0, java.lang.String in1) throws java.rmi.RemoteException;
    public boolean addUser(AdminClient.User in0, java.lang.String in1) throws java.rmi.RemoteException;
    public boolean updateUser(AdminClient.User in0, java.lang.String in1, java.lang.String in2) throws java.rmi.RemoteException, AdminClient.LDAPManagedFieldRemoteException;
    public AdminClient.User[] searchUsers(java.lang.String in0, java.lang.String in1, java.lang.String in2, java.lang.String in3, java.lang.String in4, java.lang.String in5) throws java.rmi.RemoteException;
    public boolean updateFile(AdminClient.FileInfo in0, java.lang.String in1, java.lang.String in2) throws java.rmi.RemoteException;
    public boolean removeFile(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException;
    public java.lang.String FTPServerStop(java.lang.String in0) throws java.rmi.RemoteException;
    public boolean addNode(AdminClient.Node in0, java.lang.String in1) throws java.rmi.RemoteException;
    public boolean addUserToRole(java.lang.String in0, java.lang.String in1, java.lang.String in2) throws java.rmi.RemoteException;
    public boolean updateGroup(AdminClient.Role in0, java.lang.String in1, java.lang.String in2) throws java.rmi.RemoteException;
    public boolean updateConfig(AdminClient.Config in0, java.lang.String in1, java.lang.String in2) throws java.rmi.RemoteException;
    public boolean removeConfig(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException;
    public boolean removeAudit(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException;
    public AdminClient.AuditBase getAudit(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException;
    public AdminClient.AuditBase[] searchAudits(AdminClient.AuditBase in0, java.lang.String in1, java.lang.String in2) throws java.rmi.RemoteException;
    public AdminClient.Checkpoint getCheckpoint(java.lang.String in0, java.lang.String in1, java.lang.String in2, java.lang.String in3) throws java.rmi.RemoteException;
    public boolean addDepartment(AdminClient.Department in0, java.lang.String in1) throws java.rmi.RemoteException;
    public AdminClient.Transfer getTransfer(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException;
    public java.lang.String addAlert(AdminClient.Alert in0, java.lang.String in1) throws java.rmi.RemoteException;
    public boolean updateAlert(AdminClient.Alert in0, java.lang.String in1) throws java.rmi.RemoteException;
    public AdminClient.Alert getAlert(AdminClient.Alert in0, java.lang.String in1) throws java.rmi.RemoteException;
    public AdminClient.Alert[] searchAlerts(AdminClient.Alert in0, java.lang.String in1, java.lang.String in2) throws java.rmi.RemoteException;
    public AdminClient.AuditBase getAlertAudit(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException;
    public boolean updateKey(int in0, AdminClient.Key in1, java.lang.String in2, java.lang.String in3) throws java.rmi.RemoteException;
    public AdminClient.Key getUserKey(int in0, java.lang.String in1, java.lang.String in2) throws java.rmi.RemoteException;
    public AdminClient.Key getServerKey(int in0, java.lang.String in1, java.lang.String in2) throws java.rmi.RemoteException;
    public AdminClient.Key getSystemKey(int in0, java.lang.String in1, java.lang.String in2) throws java.rmi.RemoteException;
    public AdminClient.Messages testJMSServer(AdminClient.JMSSrvCfg in0, java.lang.String in1) throws java.rmi.RemoteException;
    public boolean addLicenseKey(AdminClient.LicenseKey in0, java.lang.String in1) throws java.rmi.RemoteException;
    public AdminClient.LicenseKey getLicenseKey(AdminClient.LicenseKey in0, java.lang.String in1) throws java.rmi.RemoteException;
    public AdminClient.FileInfo[] searchFiles(AdminClient.FileInfo in0, java.lang.String in1, java.lang.String in2) throws java.rmi.RemoteException;
    public java.lang.Object[] LDAPSyncUser(boolean in0, java.lang.String in1, java.lang.String in2) throws java.rmi.RemoteException;
    public java.lang.String addNodeToBank(AdminClient.NodeFT in0, java.lang.String in1) throws java.rmi.RemoteException;
    public boolean updateU2URequest(AdminClient.U2URequest in0, java.lang.String in1) throws java.rmi.RemoteException;
    public boolean addOnDemandUsers(AdminClient.OnDemandUsers in0, java.lang.String in1) throws java.rmi.RemoteException;
    public AdminClient.OnDemandUsers[] getOnDemandUsers(java.lang.String in0, java.lang.String in1, java.lang.String in2) throws java.rmi.RemoteException;
    public boolean updateJMSConfig(AdminClient.JMSSrvCfg in0, java.lang.String in1) throws java.rmi.RemoteException;
    public AdminClient.User[] searchAllUsers(AdminClient.User in0, java.lang.String in1, java.lang.String in2, java.lang.String in3, java.lang.String in4, java.lang.String in5, java.lang.String in6) throws java.rmi.RemoteException;
    public AdminClient.UserProfile getUserProfile(java.lang.String in0, java.lang.String in1, java.lang.String in2, java.lang.String in3) throws java.rmi.RemoteException;
    public boolean updateLicenseKey(AdminClient.LicenseKey in0, java.lang.String in1) throws java.rmi.RemoteException;
    public boolean removeLicenseKey(AdminClient.LicenseKey in0, java.lang.String in1) throws java.rmi.RemoteException;
    public AdminClient.User addAndReturnUser(AdminClient.User in0, java.lang.String in1) throws java.rmi.RemoteException;
    public boolean updateTransfer(AdminClient.Transfer in0, java.lang.String in1, java.lang.String in2) throws java.rmi.RemoteException;
    public boolean removeTransfer(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException;
    public AdminClient.Transfer[] searchTransfers(AdminClient.Transfer in0, java.lang.String in1, java.lang.String in2) throws java.rmi.RemoteException;
    public boolean updateDepartment(AdminClient.Department in0, java.lang.String in1, java.lang.String in2) throws java.rmi.RemoteException;
    public AdminClient.U2URequest getU2URequest(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException;
    public boolean updateProfileInBank(AdminClient.Profile in0, java.lang.String in1) throws java.rmi.RemoteException;
    public boolean deleteProfileFromBank(AdminClient.Profile in0, java.lang.String in1) throws java.rmi.RemoteException;
    public AdminClient.ServerCredentials[] retrieveAllServerCredentials(java.lang.String in0) throws java.rmi.RemoteException;
    public AdminClient.ServerCredentials getServerCredential(java.lang.String in0, java.lang.String in1, java.lang.String in2, java.lang.String in3) throws java.rmi.RemoteException;
    public AdminClient.ServerCredentials[] searchServerCredentials(AdminClient.ServerCredentials in0, java.lang.String in1) throws java.rmi.RemoteException;
    public boolean removeDepartment(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException;
    public boolean updateNodeInBank(AdminClient.NodeFT in0, java.lang.String in1) throws java.rmi.RemoteException;
    public boolean addNodeToServer(AdminClient.NodeFT in0, AdminClient.Server in1, java.lang.String in2) throws java.rmi.RemoteException;
    public AdminClient.NodeFT getNodeFromBank(AdminClient.NodeFT in0, java.lang.String in1) throws java.rmi.RemoteException;
    public AdminClient.SshServerConfig getSshSrvConfig(java.lang.String in0) throws java.rmi.RemoteException;
    public AdminClient.SshServerConfig getSshSrvConfig(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException;
    public AdminClient.Key validateAddKey(int in0, AdminClient.Key in1, java.lang.String in2) throws java.rmi.RemoteException;
    public java.lang.String addProfileToBank(AdminClient.Profile in0, java.lang.String in1) throws java.rmi.RemoteException;
    public AdminClient.Node[] retrieveAllNodes(java.lang.String in0) throws java.rmi.RemoteException;
    public int deleteSessionId(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException;
    public AdminClient.User[] retrieveAllUsers(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException;
    public boolean removeAlertAudit(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException;
    public java.lang.String[] retrieveUserIds(java.lang.String in0, java.lang.String[] in1, java.lang.String in2) throws java.rmi.RemoteException;
    public AdminClient.FileInfo[] retrieveAllFiles(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException;
    public AdminClient.Role[] retrieveAllRoles(java.lang.String in0) throws java.rmi.RemoteException;
    public boolean addUserToGroup(java.lang.String in0, java.lang.String in1, java.lang.String in2) throws java.rmi.RemoteException;
    public boolean addUserProfile(AdminClient.UserProfile in0, java.lang.String in1) throws java.rmi.RemoteException;
    public AdminClient.FTPServerConfig getFtpSrvConfig(java.lang.String in0) throws java.rmi.RemoteException;
    public AdminClient.FTPServerConfig getFtpSrvConfig(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException;
    public java.lang.String FTPServerStart(java.lang.String in0) throws java.rmi.RemoteException;
    public AdminClient.AS2SrvCfg getAS2SrvConfig(java.lang.String in0) throws java.rmi.RemoteException;
    public AdminClient.AS2SrvCfg getAS2SrvConfig(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException;
    public AdminClient.CFServerConfig getCFSrvConfig(java.lang.String in0) throws java.rmi.RemoteException;
    public AdminClient.CFServerConfig getCFSrvConfig(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException;
    public boolean removeCheckpoint(java.lang.String in0, java.lang.String in1, java.lang.String in2, java.lang.String in3) throws java.rmi.RemoteException;
    public boolean updateConfigU2U(AdminClient.ConfigU2U in0, java.lang.String in1) throws java.rmi.RemoteException;
    public java.lang.String[] LDAPSyncUserBW(boolean in0, java.lang.String in1, java.lang.String in2) throws java.rmi.RemoteException;
    public AdminClient.Server getServerStatus(AdminClient.Server in0, java.lang.String in1) throws java.rmi.RemoteException;
    public java.lang.String getProductNameVersion(java.lang.String in0) throws java.rmi.RemoteException;
    public java.lang.String getCopyrightInfo(java.lang.String in0) throws java.rmi.RemoteException;
    public boolean changePassword(java.lang.String in0, java.lang.String in1, java.lang.String in2) throws java.rmi.RemoteException;
    public AdminClient.Config getConfig(java.lang.String in0) throws java.rmi.RemoteException;
    public AdminClient.Config getConfig(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException;
    public boolean validateSession(java.lang.String in0) throws java.rmi.RemoteException;
    public java.lang.String getBWSession() throws java.rmi.RemoteException;
    public boolean closeSession(java.lang.String in0) throws java.rmi.RemoteException;
    public AdminClient.User getUser(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException;
    public AdminClient.Department getDepartment(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException;
    public boolean addKey(int in0, AdminClient.Key in1, java.lang.String in2) throws java.rmi.RemoteException;
    public boolean removeKey(int in0, java.lang.String in1, java.lang.String in2) throws java.rmi.RemoteException;
    public AdminClient.Server getServer(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException;
    public AdminClient.Role getGroup(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException;
    public AdminClient.Role getRole(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException;
    public java.lang.String getSession() throws java.rmi.RemoteException;
    public boolean removeGroup(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException;
    public boolean removeUser(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException;
    public boolean addGroup(AdminClient.Role in0, java.lang.String in1) throws java.rmi.RemoteException;
    public AdminClient.FileInfo getFile(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException;
    public AdminClient.Node getNode(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException;
    public boolean removeNode(java.lang.String in0, java.lang.String in1) throws java.rmi.RemoteException;
    public AdminClient.Key[] searchKeys(int in0, AdminClient.Key in1, java.lang.String in2, java.lang.String in3) throws java.rmi.RemoteException;
}
